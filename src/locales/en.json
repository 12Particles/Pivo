{
  "common": {
    "save": "Save",
    "cancel": "Cancel",
    "delete": "Delete",
    "edit": "Edit",
    "create": "Create",
    "back": "Back",
    "close": "Close",
    "confirm": "Confirm",
    "submit": "Submit",
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "warning": "Warning",
    "info": "Info",
    "search": "Search",
    "filter": "Filter",
    "sort": "Sort",
    "actions": "Actions",
    "status": "Status",
    "priority": "Priority",
    "execute": "Execute",
    "stop": "Stop",
    "retry": "Retry",
    "view": "View",
    "settings": "Settings",
    "help": "Help",
    "about": "About",
    "logout": "Logout",
    "login": "Login",
    "register": "Register",
    "profile": "Profile",
    "language": "Language",
    "theme": "Theme",
    "notifications": "Notifications",
    "yes": "Yes",
    "no": "No",
    "add": "Add"
  },
  "project": {
    "title": "Project",
    "projects": "Projects",
    "projectList": "Project List",
    "createProject": "Create Project",
    "selectProject": "Select Project from Git",
    "projectName": "Project Name",
    "projectDescription": "Project Description",
    "projectPath": "Project Path",
    "gitRepository": "Git Repository",
    "noDescription": "No description",
    "noProjects": "No Projects",
    "createFirstProject": "Create your first project to get started",
    "currentBranch": "Current Branch",
    "hasUncommittedChanges": "Has uncommitted changes",
    "selectGitDirectory": "Select Git Project Directory",
    "selectProjectDirectory": "Select Project Directory",
    "myProject": "My Project",
    "describeYourProject": "Describe your project...",
    "gitRepositoryUrl": "Git Repository URL",
    "setupScript": "Setup Script",
    "devScript": "Development Server Script",
    "notGitRepo": "Selected directory is not a Git repository",
    "selectGitDirError": "Failed to select Git directory",
    "createProjectError": "Failed to create project"
  },
  "task": {
    "title": "Task",
    "tasks": "Tasks",
    "taskList": "Task List",
    "createTask": "Create Task",
    "addTask": "Add Task",
    "taskTitle": "Task Title",
    "taskDescription": "Task Description",
    "taskDetails": "Task Details",
    "taskConversation": "Task Conversation",
    "taskStatus": {
      "todo": "To Do",
      "working": "Working",
      "reviewing": "Reviewing",
      "done": "Done",
      "cancelled": "Cancelled"
    },
    "taskPriority": {
      "low": "Low",
      "medium": "Medium",
      "high": "High",
      "urgent": "Urgent"
    },
    "assignee": "Assignee",
    "tags": "Tags",
    "createdAt": "Created At",
    "updatedAt": "Updated At",
    "noTasks": "No tasks yet",
    "selectTaskToView": "Select a task to view details",
    "selectTaskToChat": "Select a task to start conversation",
    "startChat": "Please run the task to start conversation",
    "aiReady": "AI assistant is ready, please enter message to start conversation",
    "startingAi": "Starting AI assistant...",
    "noConversation": "No conversation history",
    "deleteConfirm": "Are you sure you want to delete task \"{{title}}\"?",
    "taskDeleted": "Task deleted",
    "deleteTaskError": "Failed to delete task",
    "createTaskSuccess": "Task created successfully",
    "createTaskError": "Failed to create task",
    "updateTaskError": "Failed to update task status",
    "updateTaskSuccess": "Task updated successfully",
    "updateTaskDetails": "Update task details",
    "runTaskError": "Failed to run task",
    "taskStarted": "Task started",
    "interactWithAi": "Please interact with AI assistant in task conversation",
    "editFeatureComing": "Edit feature coming soon",
    "editTask": "Edit Task",
    "metadata": "Metadata",
    "worktreeInfo": "Worktree Information",
    "worktreePath": "Worktree Path",
    "branchName": "Branch Name",
    "noWorktreeCreated": "No worktree created yet. Run the task to create a worktree.",
    "executeAttempts": "Execution Attempts",
    "currentAttempt": "Current Attempt",
    "noAttempts": "No execution attempts",
    "createNewAttempt": "Create New Execution Attempt",
    "worktreeCreated": "Worktree created",
    "taskCompleted": "Task completed",
    "reviewResults": "AI has completed task processing, please review results",
    "addTaskToProject": "Add a new task to the current project",
    "enterTaskTitle": "Enter task title...",
    "enterTaskDescription": "Enter task description...",
    "addTag": "Add tag...",
    "createAndStart": "Create & Start",
    "images": "Images",
    "attachedImages": "Attached {{count}} images"
  },
  "terminal": {
    "title": "Terminal",
    "notAssociatedProject": "Not associated with project"
  },
  "integration": {
    "title": "Integration"
  },
  "settings": {
    "title": "Settings",
    "generalSettings": "General Settings",
    "appearanceSettings": "Appearance Settings",
    "appearanceDescription": "Customize the appearance and theme of the application",
    "editorSettings": "Editor Settings",
    "editorDescription": "Configure editor behavior and features",
    "theme": {
      "light": "Light",
      "dark": "Dark",
      "system": "Follow System"
    },
    "language": {
      "en": "English",
      "zh": "简体中文"
    },
    "autoSave": "Auto Save",
    "autoSaveDescription": "Automatically save your changes",
    "notifications": "Notifications",
    "notificationsDescription": "Receive task updates and system notifications",
    "saveSettings": "Save Settings",
    "settingsSaved": "Settings saved",
    "mcpServers": "MCP Servers",
    "mcpConfiguration": "MCP Configuration"
  },
  "ai": {
    "sessionStarted": "{{type}} session started",
    "thinking": "Thinking",
    "toolResult": "Tool Result",
    "usingTool": "Using tool: {{tool}}",
    "system": "System",
    "you": "You",
    "sendMessage": "Send message... (Shift+Enter for new line)",
    "addImage": "Add image",
    "messagePending": "Message queued",
    "willSendAfterCurrent": "Will send after current execution completes",
    "pendingMessages": "{{count}} pending",
    "aiThinking": "is thinking...",
    "stopExecution": "Stop execution",
    "executionStopped": "AI assistant has stopped execution",
    "stopExecutionError": "Failed to stop execution",
    "sendMessageError": "Failed to send message",
    "startSessionError": "Failed to start session",
    "selectImageError": "Failed to select images",
    "showAllLines": "Show all {{count}} lines",
    "collapse": "Collapse",
    "attachment": "Attachment",
    "executing": "Executing",
    "waitForCompletion": "Please wait for current task to complete",
    "imagePasted": "Image pasted",
    "imagePastedDesc": "Pasted {{count}} image(s)"
  },
  "git": {
    "fileChanges": "File Changes",
    "taskNotStarted": "Task not started yet",
    "executeToShowChanges": "File changes will be shown after task execution",
    "noFileChanges": "No file changes",
    "changedFiles": "Changed",
    "allFiles": "All Files",
    "selectFileToView": "Select a file to view changes"
  },
  "toast": {
    "error": "Error",
    "success": "Success",
    "warning": "Warning",
    "info": "Info"
  },
  "logs": {
    "viewLogs": "View Logs",
    "applicationLogs": "Application Logs",
    "backendLogs": "Backend Logs",
    "frontendLogs": "Frontend Logs",
    "export": "Export",
    "clear": "Clear",
    "openInEditor": "Open in Editor",
    "autoRefresh": "Auto-refresh",
    "noLogs": "No logs available",
    "failedToLoad": "Failed to load logs",
    "openFailed": "Failed to open log viewer",
    "exportSuccess": "Logs exported successfully",
    "clearFailed": "Failed to clear logs",
    "logsCleared": "Logs cleared successfully",
    "shortcut": "Ctrl/Cmd+L"
  },
  "mergeRequests": {
    "title": "Merge Requests",
    "noMergeRequests": "No merge requests found",
    "viewOnGitLab": "View on GitLab",
    "hasConflicts": "Has conflicts",
    "pipeline": "Pipeline",
    "createMR": "Create Merge Request",
    "updateMR": "Update Merge Request",
    "mrCreated": "Merge request created successfully",
    "mrUpdated": "Merge request updated successfully",
    "mrError": "Failed to create/update merge request"
  },
  "gitlab": {
    "config": "GitLab Configuration",
    "personalAccessToken": "Personal Access Token",
    "gitlabUrl": "GitLab URL",
    "defaultBranch": "Default Target Branch",
    "notConfigured": "GitLab is not configured. Please configure GitLab in settings.",
    "configureNow": "Configure Now"
  }
}